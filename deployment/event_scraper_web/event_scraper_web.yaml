apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  namespace: eventscraper
  labels:
    app: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: webserver
        image: localhost:5000/event_scraper_web:4.1
        env:
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: RABBITMQ_USER
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: RABBITMQ_PASSWORD
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: rabbitmq-cm
              key: RABBITMQ_HOST
        ports:
        - containerPort: 443
        command:
          - "gunicorn"
          - "webserver:app"
          - "--bind"
          - "0.0.0.0:443"
          - "--worker-class"
          - "gevent"
          - "--workers"
          - "2"
          - "--timeout"
          - "30"
          - "--keep-alive"
          - "2"
          - "--log-level"
          - "info"
          - "--access-logfile"
          - "-"
          - "--error-logfile"
          - "-"
          - "--capture-output"
          - "--certfile"
          - "/app/cert/server.crt"
          - "--keyfile"
          - "/app/cert/server.key"
        volumeMounts:
          - name: certs-volume
            mountPath: /app/cert
            readOnly: true
      volumes:
      - name: certs-volume
        secret:
          secretName: webserver-tls
---
apiVersion: v1
kind: Service
metadata:
  name: webserver
  namespace: eventscraper
spec:
  selector:
    app: webserver
  ports:
    - protocol: TCP
      port: 30443
      targetPort: 443
      nodePort: 30443
  type: LoadBalancer
---
apiVersion: v1
kind: Secret
metadata:
  name: webserver-tls
  namespace: eventscraper
type: Opaque
data:
  server.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZDVENDQXZHZ0F3SUJBZ0lVQkVxRmZZcHord2pzKzlQTWttbUQzZ3hTYlNJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0ZERVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYRFRJMU1ETXpNREE1TlRjek1sb1hEVEkyTURNegpNREE1TlRjek1sb3dGREVTTUJBR0ExVUVBd3dKYkc5allXeG9iM04wTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBZzhBTUlJQ0NnS0NBZ0VBbDZBMnBYMUZQL1k1UjFwK0FBRTlrU0t5bmlNYmRBV3pBbkt6cXZYVXNVTnYKby9jOFVTTWJlWlVMb1poR3JGN2YrdEcybzFHeWFrbVJqWG95dEtTQjBJdi9tc2VhMkVTYVhpbHR4NVpyQ0NQTAp3TUl5TG5TR1M2UEtybnRoM3U2U3h1MDg1ZmFYT251anlndUpweHp4SUtndHBIenpFWEFWQkhhZVYyaHgyR0tuCnY2ZGt4U1NiRUNxT01BRGk0TVV6MjZVbUwyODU3cENXMnFGblN5MFI5dzRIQ1JnYlhldWkxLy9qa04zQkJJSGgKNC8vdGJveGVadnZXbnN0OHViVDVMekNqY2JpUzc1OEh6MEJIU01pcTVGRlFnbWxrMzJhUUIwczhsa3ZnL1lQeApESjlXMXp3dCtWZ21xbXRTU0g4T3BiTUxlQkg5WUVOOVpZK3YrcGQvOWRhYW8xT3hkNWRFWDZWRUhzLzkrdzYvCldkdG02aXJXTTIvbElYNlBLaWZjWm5JREEvbCs3VSt2NXpZbUEydmQ1d0NEaDBtTUM4ZHhhdWVSZEh6SGVHUnUKSm1IOHNpUzhsUE8xQ1NDY29hZjJSOG9tZ0VXQ1U4Vk1xWU0zQUlic2ZYbisvZTZXUUtTZC93dXpmam1GamdwTwpKcGtrdzN3Z0VDTC81dVZERG56N0FveFZML3dXRHNWUjlDU0FVOVBLL2l6R291K3dvU2M1VTVSY1Y4N25CQkxtClhPS0k4TWVNSmVJYmtLcCtPdlhvbzI4dVRSY1VxNFg2dThpZ3FkMy9WdkNKOUh6YWkzbDJhaG1NNmo0MG1kUjIKVi9iVUpMWmkxSjUyR2xWL01aL0NzbXJLZlhKMmx2NHljUHVWblgvdndZVkN1QXQ3UlkrZXBjdDNhOStUWXRrQwpBd0VBQWFOVE1GRXdIUVlEVlIwT0JCWUVGSEsrWkRTdXBiRzh2YWJQK1ZrUzV6ell3TWtzTUI4R0ExVWRJd1FZCk1CYUFGSEsrWkRTdXBiRzh2YWJQK1ZrUzV6ell3TWtzTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dJQkFKQVNLeHBQdGQvcEdraDJkT2dpRnIva1c3YnRWaWlVaXNxWDU1eDBUWVJ6WGR3YgpmbWxCL0lFajZIQk5tVXQ4WGIzaW1JTHlNQm5QRGVKcXNDTVB0cGlrK0tQV1U1YVVtTVhLakpqbEpOVk5ZYTB5CmtWaDZLMWNrU1BRTWVvcmorMUlnK2EvSXFVanJyODlTcUp3a1pxWFFkK1lxTWl1WnI3R1pJM0ZqQkhTMXNUNEEKdGZDUmlPTUc0dDNTZFlvbUZMRVllZGExWHQrVk9HMnVaYzlIUTJmaW1ScHZCU2FlL0U1Qm9pb2o3OVhYYzFsQgpjQkJZeDJBOXlMSG5pY2N4NEloeHpoWU52cGZaYmxGU1laVHdsOTNnMlJUWjljTHlKS0RYZm55a0F4MVBMa1VRCnluS2lGclRNeXhvUHRpKzdHcUMyOHlpV3paMUozVEVuMWl1bFBockcwcDlmdlhSaldVMU0rb0pMcVlUNE1BbUYKT0JMdWs3YmJLS3h2RXI1QmNjUExxTENTejUwWkFRMXJxaXRYSk1mZjVGN0xrcy9DZzZPdFJlNmRvdUdJY0hFZApvTGJGYUo4VXYrODBtSXNDTEtHRkFBVmU5dzlCQUo4bWhMcUtpdTF3ekVjOENlbmM2YnFBNFpiSHd5WEJGdktvCmNqdHRrNnMxSG9EdW1YSFpmOWl3Q0wvRlFlRkFualNYR1F3VHRrNG5lWVE5am5lbXVkb000NXo4c08yVUJoanIKd2pkOHBrcDAramIyNkdtTnpnbzJnTEQwdU50aTkxRUNGaXR1UC9YUHlHL2NKOHZhTkVhVFluS3N4dzdpZFBNcgovMjRhcSt2dVhtMFJPcWVobnhWMzF1R1VZaXdxcmN5NEkweUlZd0YxUTc3TTBxS1BibXJoOHBjNS9VTW8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  server.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRUUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Nzd2dna25BZ0VBQW9JQ0FRQ1hvRGFsZlVVLzlqbEgKV240QUFUMlJJcktlSXh0MEJiTUNjck9xOWRTeFEyK2o5enhSSXh0NWxRdWhtRWFzWHQvNjBiYWpVYkpxU1pHTgplakswcElIUWkvK2F4NXJZUkpwZUtXM0hsbXNJSTh2QXdqSXVkSVpMbzhxdWUySGU3cExHN1R6bDlwYzZlNlBLCkM0bW5IUEVncUMya2ZQTVJjQlVFZHA1WGFISFlZcWUvcDJURkpKc1FLbzR3QU9MZ3hUUGJwU1l2YnpudWtKYmEKb1dkTExSSDNEZ2NKR0J0ZDY2TFgvK09RM2NFRWdlSGovKzF1akY1bSs5YWV5M3k1dFBrdk1LTnh1Skx2bndmUApRRWRJeUtya1VWQ0NhV1RmWnBBSFN6eVdTK0Q5Zy9FTW4xYlhQQzM1V0NhcWExSklmdzZsc3d0NEVmMWdRMzFsCmo2LzZsMy8xMXBxalU3RjNsMFJmcFVRZXovMzdEcjlaMjJicUt0WXpiK1VoZm84cUo5eG1jZ01EK1g3dFQ2L24KTmlZRGE5M25BSU9IU1l3THgzRnE1NUYwZk1kNFpHNG1ZZnl5Skx5VTg3VUpJSnlocC9aSHlpYUFSWUpUeFV5cApnemNBaHV4OWVmNzk3cFpBcEozL0M3TitPWVdPQ2s0bW1TVERmQ0FRSXYvbTVVTU9mUHNDakZVdi9CWU94VkgwCkpJQlQwOHIrTE1haTc3Q2hKemxUbEZ4WHp1Y0VFdVpjNG9qd3g0d2w0aHVRcW40NjllaWpieTVORnhTcmhmcTcKeUtDcDNmOVc4SW4wZk5xTGVYWnFHWXpxUGpTWjFIWlg5dFFrdG1MVW5uWWFWWDh4bjhLeWFzcDljbmFXL2pKdworNVdkZisvQmhVSzRDM3RGajU2bHkzZHIzNU5pMlFJREFRQUJBb0lDQUE0bVlYTW9NYUk2ZERYNGQvSEFLK0t6CmZqL0x2dkFnNkFlK2RJM3J5eUdQellkYnQwRkxLWEU3TzQ2bEMxTml0enhNL2VKWDZYS0owdytFNjk1M3k3V08KbXhmeXNMeW1DbEhuUTl0d2FpU2tVb3QybEFCSjE0NlBob2FwOVFRODkyMmhEaUhYMVYwYjFMa3lRbkpaL1JhegpHeTlTaWN5Q3pUTlJibzF4cmM0bnhzZlg4MHVDa3dYN01ySEFJMndlZXl4d1NSUDhLVWZlTG5YUXdqYjl5Y05vCmg3ZU5qR0JEY1RyL0lsbU9tRWkzWmtGRXpQK1lFZWRDY1ZENFpIZGdNREQ3TlFXVDJBS01zTW5pa2NSMUZaMmgKQ1FaaWw0dFJvdmRMU2lnc2hKNmtCWWJNQitxbUx4UXA2ZEhWbWlReDEwZ1hZV2FmSnlvb29qY3NKWndaTDFPNQpHUjJwTFYyRHRzM0V1U2E0Y0hIOElpSzIrVXlMUkkrZ0llbmlYeHZ5WG52bExnSjlnWjVkV2U5UUMrWi8rRGtUCnRMdXMxNVVYZzdTV0ZnSy9MYVBreXIrQnRscWxZK0lvWWxqam9QSjBsNHlPa3Vha3RaSUJkRklmcmNCNGc1UkMKMGw3N0FjK3BqOURxVWxpN3Q5ZW8wWnZ5VzJxSklmUmlxaCtyNXJLWWFaK0lFVGwxVVRNNEJYUmNONzVrOUFyUgpQczVjS2lkMmxHNUlNZUY2c0Z4QzJLb3hLWkdBWmpUU2lsaldTNEFWWmsvR203WDA4Q0hzeUYzell0Wnd4bmhlCjVuOXFNWGRBNUtYME1NNGd6aWo0Q3JkMEh4ZWxJVXBseW43WU5SRmdQYk9pQjM4cFpIR2FINXlSRnd3TUhyKzQKY2lMQkVhWWF2dWtyNXZ5NUdpMUJBb0lCQVFETmhZWk96NVcwYmhLbGo1aGg4MFFSVlF3OHJwak5HekJabnNpUgpzTmVtbXJ5UGY4bk5ISFN5N2o0N2llWVBGeFJVdUc3aFVGRDdNTFBSQ0ZTR24zOFZaeTUxRGprN1k0RThURzMrClZBMDFxemE2QlZabG05dkRiREVZaWRFZmZQcEkzcW01cStXQmY3OUVpVEZRUVo3aWkrSGwzNWFtNm5NazBDNDQKczJIa3hSRnZBaDl3MWNmMDVub1J4S1BUSndCS3VaNFgrNmZzTFZiTEJOWHNNcEs3TkttSmlLb2xvL201RDh3VgpXLzJVNk1Eb1JVMk9aWUZUc3VLTkVYbDFDYkRCbGtVcjA3Q0loQkllRzFLRlJBY25NZkpQQzZ0S3ZkdWNsNy8yCmVDREtxdG5PL2pLVnV4V05VUkx1Q0RaYjBlYU82dmk2WnhmMWZKYXNHMFJhR0lRZEFvSUJBUUM4M2VuYlpvcWMKS3lBbHdjWjlKVHdTZ1ovSUV4Vzh5TW1oTFZEZ2IrT2F4WURnN1E1K2xvd1R5VldFR2tBR21wUGpUZUpDN1hXRgpEOUpOMko1OUZwbWF3eVdkVXhVaVZlb3V3ODFIdGYzYzNLNnhZeFIxdmF0eTlrRC9XL203VU5ja0g4QlBBRmhSCkx1TnZTNmlUaEd1eUFMQUdMTEZxQ0syMXdITkYvcjQyUVZSVVlKQUUzSGRSVUFDZDNPV05BeG4xRWVRUnlKUVMKaUlUaGNlUWttRnZHL3dKM0pnRG1Pdi9DblI5NFVsd2w5c3RpR053Qy9PWlpYUDlxdmROVjFaOUM3R054SXV4QgpVU2c2eUxuNlpJY0lNZFZoTUVwZENmUGEvTXh4ODJrRFY2Umh2SUVTZm0rVi83b2NJb2ovS2tCMVdCMmM2RmlkCmNHdHRDbXdwOFNUdEFvSUJBRnhGeHJjN25Bc1dJR2tVdjJXNndxVEZlbWtFT3JaYnJxbU9FSjdZdHZtbUgyS08KRFJ4NTJpczdxOVV2WklzQjRhN24zMkJwbnZJb081TnVHZ1VYTndkMCsvYXlIQi85M05nbHVIeW5ZQWJvaC9tYwp5OTF5ekloQTJ3b1pWanE4OGVJbGxpNDJieVJsSm9xdXplVXFrUnRGa25hU25DRDB3aDJWR2l0NjNrakg4YnZWClNDaHcwd1d4TkwwbGZDZ2hLcEJpSmdpK2cvWVZwUkloYWFwU1NtNmloanVwa0RxMkZEaHlUejZIdnFKTW5jK3EKemRkUTIyK29zTzZGR2ZMaUZ1blRmZHJmZ0RMS21SZkxUSkZvcVkxL2J6cnVFa25NVS8xS1pIVlVHZVRrTUVZdQorcWNmQjk0YXVGVUdldUZlckJVZWllMm11NnNMOU5ud3BBK1BVa0VDZ2dFQVNHM2VHanEzMjI0YWRRQmNDM0ExCkdtL0ZnK2YxeFNGSFdkMVVEODQ0L2dqU0JQQkVSNzJhV0pnMGlHVzh1Z3VidldjSDUxekRYZFVVZExBbkQ1ZVUKTHFxNkNSeHNsVzlYVUxuY1Jxei9meXpPZmM2ZWNRemM3RWlONHFBMkpHUzdMT3BVU0xlOEp0NFJjSVFXVVFSTwpmTVFRdlQxMGlGSnRzNjdyUmlPTWRLZ1hIQWl3RW4wdDhPdjZZSS92SkdYVkZZdlg2QTRBNHg2aHZ3ZDdVNkZ1ClNPRlE0N3FhUzdEQ2xyTEU5OUsxN2dVNE9CV0tna2JVVzk3elFNOHRkZFJuc0RXUmFUallXN0F3K21JeUdGbG4KQTNpQStUV1l2eGRyQWtkQ2JFekpyL056WWR2MXI4NzNJaEloSUZzS0tMamVZV0g2Y1VzVmVNTTlIMk1JMmdqVgpmUUtDQVFCYXJqVUNwcVJzQ0NqRG9xTVlxd0tVSzBlK3AxVmk2bWdBZTVva3Zha1Nra0dRMFJSVjdUWXpLNGlSCldmNVZGZ1BvQzdvT1pTTS8yK1BqMkdEVEUvcEFxKzhNanpOYkhxREJNd3Q0QndMY0JoVzVMNWlkMVlTSWsyWkcKZEEvY1d2MFpYQlh2Y2cwOHdlVHRPbytoVHdsY0h0clp6SnhHOVJGMHhneSs5bDlFazUxVU1sT0E2aGZnL29jTApJdnNxbU9KYSttc2FnVzJhcW11Sm9qQjlYdkxWSG91azJWbHhsZXg4bmoxOEtNd0hmcFdlQzYyVXoxR1VneHgrCmRlQnk5MHlKTDJaRWd5K0trQ09mRHRPRTFZN3kySFQ1bHlGWTFIR1cyWEw2VVE2VlNVUHJTWm9VU0ZIcG15enMKRW8ycGFHT3ZLc1A1M3FHUW1uNGUySXkxK0xlOAotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
